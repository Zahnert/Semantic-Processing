import os

SUB_DIR = '/media/felix/HCP_HDD/HCP'

def gen_exclusion():
    """Exclude ventricles. Runs a tcsh-script (also found in this repository). Used to generate aseg_nodif_mask"""
    os.system(f"/home/felix/neuro-bin/language/create_exclusion_mask {path}/Diffusion")
    

def gen_aseg_nodif_mask():
    """Take FS-mask and sub ventricles"""
    
    os.chdir(f"{path}/Diffusion/")
    #binarize and subtract csf
    os.system(f"fslmaths aseg2diff.nii.gz -bin aseg_bin.nii.gz")
    os.system(f"fslmaths aseg_bin.nii.gz -sub exclusion_mask.nii.gz aseg_mask.nii.gz")
    os.remove(f"{path}/Diffusion/aseg_bin.nii.gz")
    #rename original bedpostX nodif mask and move our custom one to bedpostX folder
    os.rename(f"{path}/Diffusion/Diffusion.bedpostX/nodif_brain_mask.nii.gz", f"{path}/Diffusion/Diffusion.bedpostX/old_brain_mask.nii.gz")
    move(f"{path}/Diffusion/aseg_mask.nii.gz", f"{path}/Diffusion/Diffusion.bedpostX/")
    os.rename(f"{path}/Diffusion/Diffusion.bedpostX/aseg_mask.nii.gz", f"{path}/Diffusion/Diffusion.bedpostX/nodif_brain_mask.nii.gz")
    
    
    
def gen_waypoint():
    """white matter as waypoint"""
    
    os.chdir(f"{path}/Diffusion/")
    os.system(f"fslmaths aseg2diff.nii.gz -thr 2 -uthr 2 white_lh.nii.gz")
    os.system(f"fslmaths aseg2diff.nii.gz -thr 41 -uthr 41 white_rh.nii.gz")
    os.system(f"fslmaths white_lh.nii.gz -add white_rh.nii.gz white_non_bin.nii.gz")
    os.system(f"fslmaths white_non_bin.nii.gz -bin white.nii.gz")
    os.system("rm white_non_bin.nii.gz white_lh.nii.gz white_rh.nii.gz")
    

 
def run_probtrackx(subject):
    """Expects to be in SUB_DIR. Seeds and 'ribbon exclusion' are generated by code from 'parcellate.py' in this repository."""
    
    path = os.path.join(SUB_DIR, subject)
    os.system(f"probtrackx2_gpu -s {path}/Diffusion/Diffusion.bedpostX/merged \
    -m {path}/Diffusion/Diffusion.bedpostX/nodif_brain_mask_no_cerebellum.nii.gz \
    -x {path}/Diffusion/seeds/seeds3.txt --dir={path}/Diffusion/stats/ \
    --network --pd --opd --waypoints={path}/Diffusion/white.nii.gz \
    --avoid={path}/Diffusion/ribbon_exclusion.nii.gz --modeuler --loopcheck")

# Function call


for i in sub_list:
    path = os.path.join(SUB_DIR, i)
    gen_exclusion()
    gen_aseg_nodif_mask()
    gen_waypoint()
    run_probtrackx(i)
